{"version":3,"sources":["index.js"],"names":["refs","timerfaceDays","document","querySelector","timerfaceHours","timerfaceMinutes","timerfaceSeconds","CountdownTimer","onTick","selector","targetDate","start","setInterval","currentTime","Date","now","deltaTime","time","getTimerComponents","days","pad","Math","floor","hours","mins","secs","value","String","padStart","countdownTimer","updateTimerface","updateDays","updateHours","updateMinutes","updateSeconds","textContent","minutes","seconds"],"mappings":";;;AA8EC,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA9ED,QAAA,oBAEA,IAAMA,EAAO,CACTC,cAAeC,SAASC,cAAc,6BACtCC,eAAgBF,SAASC,cAAc,8BACvCE,iBAAkBH,SAASC,cAAc,6BACzCG,iBAAkBJ,SAASC,cAAc,8BAKvCI,EAAAA,WAC0C,SAAA,EAAA,GAA/BC,IAAAA,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAa,EAAA,KAAA,GAEnCF,KAAAA,OAASA,EACTC,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,QA6DZ,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA1DG,MAAA,WAAQ,IAAA,EAAA,KACJC,YAAY,WACFC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKN,WAAaG,EAC9BI,EAAO,EAAKC,mBAAmBF,GAErC,EAAKR,OAAOS,IACb,OAmDV,CAAA,IAAA,qBA/CG,MAAA,SAAmBA,GAMZ,MAAA,CAACE,KALK,KAAKC,IAAIC,KAAKC,MAAML,EAAQ,QAK3BM,MAJA,KAAKH,IAAIC,KAAKC,MAAOL,EAAQ,MAAyB,OAI/CO,KAHR,KAAKJ,IAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MAGnCQ,KAFd,KAAKL,IAAIC,KAAKC,MAAOL,EAAQ,IAAc,SA2C3D,CAAA,IAAA,MAtCG,MAAA,SAAIS,GACGC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAqCpC,EAnEKrB,GAoCAsB,EAAiB,IAAItB,EAAe,CACtCC,OAAQsB,EACRrB,SAAU,WACVC,WAAY,IAAII,KAAK,kBAOzB,SAASgB,EAA2C,GAA1BX,IAAAA,EAAAA,EAAAA,KAAMI,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACzCM,EAAWZ,GACXa,EAAYT,GACZU,EAAcT,GACdU,EAAcT,GAGlB,SAASM,EAAWZ,GAChBnB,EAAKC,cAAckC,YAAiBhB,GAAAA,OAAAA,GAGxC,SAASa,EAAYT,GACjBvB,EAAKI,eAAe+B,YAAiBZ,GAAAA,OAAAA,GAGzC,SAASU,EAAcG,GACnBpC,EAAKK,iBAAiB8B,YAAiBC,GAAAA,OAAAA,GAG3C,SAASF,EAAcG,GACnBrC,EAAKM,iBAAiB6B,YAAiBE,GAAAA,OAAAA","file":"src.fdec61a0.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst refs = {\n    timerfaceDays: document.querySelector('.value[data-value=\"days\"]'),\n    timerfaceHours: document.querySelector('.value[data-value=\"hours\"]'),\n    timerfaceMinutes: document.querySelector('.value[data-value=\"mins\"]'),\n    timerfaceSeconds: document.querySelector('.value[data-value=\"secs\"]'),\n}\n\n\n\nclass CountdownTimer {\n    constructor({onTick, selector, targetDate}) {\n        // this.intervalId = null;\n        this.onTick = onTick;\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.start();\n    }\n\n    start() {\n        setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = this.targetDate - currentTime;\n            const time = this.getTimerComponents(deltaTime);\n            \n            this.onTick(time);\n        }, 1000);\n        \n    }\n\n    getTimerComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return {days, hours, mins, secs}\n    }\n\n    pad(value) {\n    return String(value).padStart(2, \"0\")\n}\n\n   \n}\n    \nconst countdownTimer = new CountdownTimer({\n    onTick: updateTimerface,\n    selector: '#timer-1',\n    targetDate: new Date('May 22, 2021'),\n});\n\n\n\n\n\nfunction updateTimerface({days, hours, mins, secs}) {\n    updateDays(days);\n    updateHours(hours);\n    updateMinutes(mins);\n    updateSeconds(secs);\n}\n\nfunction updateDays(days) {\n    refs.timerfaceDays.textContent = `${days}`;\n}\n\nfunction updateHours(hours) {\n    refs.timerfaceHours.textContent = `${hours}`;\n}\n\nfunction updateMinutes(minutes) {\n    refs.timerfaceMinutes.textContent = `${minutes}`;\n}\n\nfunction updateSeconds(seconds) {\n    refs.timerfaceSeconds.textContent = `${seconds}`;\n}\n\n\n"]}